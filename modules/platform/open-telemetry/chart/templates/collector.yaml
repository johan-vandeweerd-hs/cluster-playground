apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: simple
spec:
  mode: deployment
  imagePullPolicy: Always
  managementState: managed
  podDisruptionBudget:
    maxUnavailable: 1
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      memory: 500Mi
  autoscaler:
    minReplicas: 2
    maxReplicas: 5
  serviceAccount: open-telemetry
  config: |
    receivers:
      awscloudwatch:
        region: {{ .Values.awsRegion }}
        logs:
          poll_interval: 1m
          groups:
            named:
              /aws/eks/{{ .Values.clusterName }}/cluster:
                prefixes:
                  - authenticator
                  - kube-apiserver
      awscloudwatchmetrics:
        region: {{ .Values.awsRegion }}
        poll_interval: 10m
        metrics:
          named:
            - namespace: "AWS/Usage"
              metric_name: "ResourceCount"
              dimensions:
                - Name: "Service"
                  Value: "Fargate"
      prometheus:
        config:
          scrape_configs:
            - job_name: otel-collector
              scrape_interval: 10s
              static_configs:
                - targets:
                    - karpenter.karpenter:8000
                    - open-telemetry-operator.open-telemetry:8080
    processors:
    exporters:
      debug:
      sumologic:
        endpoint: https://endpoint1.collection.us2.sumologic.com/receiver/v1/http/ZaVnC4dhaV0SIKuP9XjQELiZtQMCeKi2IWR-sYkCYOEV6wjNta1Zy4BhJ-qG-hAbSqxoSqhrTUTb2l_AZbEm3USdwkDK0pViKVbfzD3Ju2-85y1HpQzcXw==
        max_request_body_size: "1_048_576"  # 1MB
        log_format: "text"
        metadata_attributes:
          - k8s.*
    service:
      pipelines:
        metrics:
          receivers:
            - prometheus
          processors: []
          exporters:
            - debug
        logs:
          receivers:
            - awscloudwatch
          processors: []
          exporters:
            - sumologic
